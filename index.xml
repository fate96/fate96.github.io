<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Luckyouo Blog</title><link>https://luckyouo.github.io/</link><description>Luckyouo 的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 14 Apr 2022 13:57:17 +0800</lastBuildDate><atom:link href="https://luckyouo.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>log4j 学习笔记</title><link>https://luckyouo.github.io/posts/log4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Thu, 14 Apr 2022 13:57:17 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/log4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 为了记录代码的工作信息，入门操作通常是使用控制台输出来查看记录。而当代码需要长时间工作时，则需要持久化记录。 log4j 是 apache 下日志记录的常用软件，</description></item><item><title>Mybatis 学习笔记</title><link>https://luckyouo.github.io/posts/mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Mon, 11 Apr 2022 16:50:49 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 MyBatis 是一款优秀的持久层框架**，它支持定制化 SQL（灵活的修改）、存储过程（函数）以及高级**映射（javabean和数据库对象的映射-&amp;</description></item><item><title>Freemarker 学习记录</title><link>https://luckyouo.github.io/posts/freemarker-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html/</link><pubDate>Mon, 11 Apr 2022 15:52:33 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/freemarker-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html/</guid><description>前言 在 Spring MVC 中，视图默认使用 jsp 文件，导致每次加载视图时，都需要对文件进行编译，从而浪费服务器的资源。为了减少对服务器资源使用，可以使用静态文件</description></item><item><title>Spring MVC学习笔记</title><link>https://luckyouo.github.io/posts/spring-mvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Sat, 09 Apr 2022 22:49:12 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/spring-mvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 MVC 三个单词分别为 Model 、 View 和 Controller ，MVC 模式是一种常用的web开发模式，比如python的 django 也是采用该模式。Spring 框架也提供了该模式，负</description></item><item><title>Spring Transaction学习笔记</title><link>https://luckyouo.github.io/posts/spring-transaction%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Tue, 05 Apr 2022 19:53:07 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/spring-transaction%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 在 Spring 框架中，需要使用事务管理对数据库进行操作，以实现事务的 ACID 特性。 事务的基本实现 Spring 框架提供了三个对象来管理事务。 PlatformTransactionManager ：平台事务管理器，sp</description></item><item><title>Spring JDBC学习笔记</title><link>https://luckyouo.github.io/posts/spring-jdbc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Tue, 05 Apr 2022 19:45:40 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/spring-jdbc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 Spring 提供了 JDBCTemplate 来操作jdbc，而让用户只需要关注sql语句即可。 JDBC使用流程 使用JDBCTemplate 导包。jdbc 所需要而依赖不在 spring</description></item><item><title>Spring AOP学习笔记</title><link>https://luckyouo.github.io/posts/spring-aop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Tue, 05 Apr 2022 18:45:48 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/spring-aop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 AOP 全称为 Aspect Oriented Programming，即面向切片编程。与 OOP (Object Oriented Programming) 面向对象编程不同的是，AOP将系统看作为多个对象的交互，通过切面，对系统的</description></item><item><title>Spring IOC学习笔记</title><link>https://luckyouo.github.io/posts/spring-ioc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</link><pubDate>Tue, 05 Apr 2022 18:28:40 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/spring-ioc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/</guid><description>前言 IOC 全称为 Inverse of control ，即控制反转。通过向 Spring 的IOC容器中注册，从而使得获得对象的过程进行反转，即不再手动生成所需要的对象，而是IOC容器向应用</description></item><item><title>图论 最大流和最小割</title><link>https://luckyouo.github.io/posts/%E5%9B%BE%E8%AE%BA-%E6%9C%80%E5%A4%A7%E6%B5%81%E5%92%8C%E6%9C%80%E5%B0%8F%E5%89%B2.html/</link><pubDate>Tue, 05 Apr 2022 15:09:06 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/%E5%9B%BE%E8%AE%BA-%E6%9C%80%E5%A4%A7%E6%B5%81%E5%92%8C%E6%9C%80%E5%B0%8F%E5%89%B2.html/</guid><description>前言 在图论中，找到单点 s 到单点 t 的最大流，称为最大流问题，其中 s-t 的最大流等于 s-t 的最小割，使用 Ford–Fulkerson 算法可以确认最大流。</description></item><item><title>线段树</title><link>https://luckyouo.github.io/posts/%E7%BA%BF%E6%AE%B5%E6%A0%91.html/</link><pubDate>Mon, 04 Apr 2022 08:48:38 +0800</pubDate><author>作者</author><guid>https://luckyouo.github.io/posts/%E7%BA%BF%E6%AE%B5%E6%A0%91.html/</guid><description>前言 线段树擅长处理区间，形状如下图 （图片取自 维基百科 线段树)。线段树是一颗完美二叉树，其叶子存储元素值值，非叶子节点存储对应区间的值，根节点</description></item></channel></rss>